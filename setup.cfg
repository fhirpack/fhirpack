

[metadata]
name = fhirpack
version = file: VERSION
description = FHIRPACK (FHIR Python Analysis Client and Kit) is a general purpose FHIR client that simplifies the access, analysis and representation of FHIR and EHR data using PANDAS, an ETL philosophy and a functional syntax.
author = Jayson Salazar Rodriguez
author_email = mail@jdsalaro.com
license = 
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/fhirpack/main
# Add here related links, for example:
project_urls =
    Documentation = https://github.com/fhirpack/main
    Source = https://github.com/fhirpack/main/src
    Changelog = https://github.com/fhirpack/main
    Tracker = https://gitlab.com/fhirpack/main/-/issues
    Download = https://github.com/fhirpack/main
    Twitter = https://twitter.com/jdsalaro
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Intended Audience :: Developers
    Intended Audience :: Healthcare Industry
    Intended Audience :: Information Technology
    Intended Audience :: Science/Research
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Education
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Information Analysis
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Topic :: Scientific/Engineering :: Visualization
    Topic :: Text Processing :: Linguistic


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.9.6

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install fhirpack[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov

[options.entry_points]
# Add here console scripts like:
console_scripts =
    fp = fhirpack.cli:main

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
; # CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    # --cov fhirpack --cov-report term-missing
    --verbose
    --pyargs
norecursedirs =
    dist
    build
    .tox
testpaths =
    tests
    src
python_files =
    test_*.py
    *_test.py
python_functions =
    test_*
filterwarnings = 
    ignore::DeprecationWarning:docker.*:
    ignore::DeprecationWarning:compose.*:
markers =
    reqdocker: signals that a test requires docker

# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

